"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigValidator = exports.PIISanitizer = exports.TelemetryManager = void 0;
exports.instrumentServer = instrumentServer;
const telemetry_1 = require("./telemetry");
const instrumentation_1 = require("./instrumentation");
function instrumentServer(server, config) {
    const telemetryManager = new telemetry_1.TelemetryManager(config);
    const instrumentation = new instrumentation_1.McpServerInstrumentation(server, telemetryManager);
    instrumentation.instrument();
    return {
        startActiveSpan: (name, attributes, fn) => {
            return telemetryManager.startActiveSpan(name, attributes, fn);
        },
        getHistogram: (name, options) => {
            return telemetryManager.getHistogram(name, options);
        },
        getIncrementCounter: (name, options) => {
            return telemetryManager.getIncrementCounter(name, options);
        },
        processTelemetryAttributes: (data) => {
            return telemetryManager.processTelemetryAttributes(data);
        },
        shutdown: async () => {
            await telemetryManager.shutdown();
        }
    };
}
var telemetry_2 = require("./telemetry");
Object.defineProperty(exports, "TelemetryManager", { enumerable: true, get: function () { return telemetry_2.TelemetryManager; } });
var sanitizer_1 = require("./sanitizer");
Object.defineProperty(exports, "PIISanitizer", { enumerable: true, get: function () { return sanitizer_1.PIISanitizer; } });
var config_1 = require("./config");
Object.defineProperty(exports, "ConfigValidator", { enumerable: true, get: function () { return config_1.ConfigValidator; } });
//# sourceMappingURL=index.js.map